"""add qa columns for each arm

Revision ID: 22f42432243c
Revises: d7b6b93ef51d
Create Date: 2024-08-21 16:33:23.743965

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '22f42432243c'
down_revision: Union[str, None] = 'd7b6b93ef51d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('exposure_time', 'effective_exposure_time', new_column_name='effective_exposure_time_r', nullable=True, comment='the effective exposure time inferred with the observed condition in r-arm (sec.)')

    op.add_column('exposure_time', sa.Column('effective_exposure_time_b', sa.REAL(), nullable=True, comment='the effective exposure time inferred with the observed condition in b-arm (sec.)'))
    op.add_column('exposure_time', sa.Column('effective_exposure_time_n', sa.REAL(), nullable=True, comment='the effective exposure time inferred with the observed condition in n-arm (sec.)'))
    op.add_column('exposure_time', sa.Column('effective_exposure_time_m', sa.REAL(), nullable=True, comment='the effective exposure time inferred with the observed condition in m-arm (sec.)'))

    op.alter_column('noise', 'noise_mean', new_column_name='noise_r_mean', nullable=True, comment='the background noise in r-arm in electron/pix (mean)')
    op.alter_column('noise', 'noise_median', new_column_name='noise_r_median', nullable=True, comment='the background noise in r-arm electron/pix (median)')
    op.alter_column('noise', 'noise_sigma', new_column_name='noise_r_sigma', nullable=True, comment='the background noise in r-arm electron/pix? (sigma)')
    op.alter_column('noise', 'wavelength_ref', new_column_name='wavelength_ref_r', nullable=True, comment='the reference wavelength to measure the sky background noise in r-arm (nm)')

    op.add_column('noise', sa.Column('noise_b_mean', sa.REAL(), nullable=True, comment='the background noise in b-arm in electron/pix (mean)'))
    op.add_column('noise', sa.Column('noise_b_median', sa.REAL(), nullable=True, comment='the background noise in b-arm electron/pix (median)'))
    op.add_column('noise', sa.Column('noise_b_sigma', sa.REAL(), nullable=True, comment='the background noise in b-arm electron/pix? (sigma)'))
    op.add_column('noise', sa.Column('wavelength_ref_b', sa.REAL(), nullable=True, comment='the reference wavelength to measure the sky background noise in b-arm (nm)'))
    op.add_column('noise', sa.Column('noise_n_mean', sa.REAL(), nullable=True, comment='the background noise in n-arm in electron/pix (mean)'))
    op.add_column('noise', sa.Column('noise_n_median', sa.REAL(), nullable=True, comment='the background noise in n-arm electron/pix (median)'))
    op.add_column('noise', sa.Column('noise_n_sigma', sa.REAL(), nullable=True, comment='the background noise in n-arm electron/pix? (sigma)'))
    op.add_column('noise', sa.Column('wavelength_ref_n', sa.REAL(), nullable=True, comment='the reference wavelength to measure the sky background noise in n-arm (nm)'))
    op.add_column('noise', sa.Column('noise_m_mean', sa.REAL(), nullable=True, comment='the background noise in m-arm in electron/pix (mean)'))
    op.add_column('noise', sa.Column('noise_m_median', sa.REAL(), nullable=True, comment='the background noise in m-arm electron/pix (median)'))
    op.add_column('noise', sa.Column('noise_m_sigma', sa.REAL(), nullable=True, comment='the background noise in m-arm electron/pix? (sigma)'))
    op.add_column('noise', sa.Column('wavelength_ref_m', sa.REAL(), nullable=True, comment='the reference wavelength to measure the sky background noise in m-arm (nm)'))

    op.alter_column('sky', 'sky_background_mean', new_column_name='sky_background_r_mean', nullable=True, comment='the mean sky background level in r-arm averaged over the FoV/fibers (counts)')
    op.alter_column('sky', 'sky_background_median', new_column_name='sky_background_r_median', nullable=True, comment='the median sky background level in r-arm averaged over the FoV/fibers (counts)')
    op.alter_column('sky', 'sky_background_sigma', new_column_name='sky_background_r_sigma', nullable=True, comment='the sigma of the sky background level in r-arm (counts)')
    op.alter_column('sky', 'wavelength_ref', new_column_name='wavelength_ref_r', nullable=True, comment='the reference wavelength to measure the sky background level in r-arm (nm)')

    op.add_column('sky', sa.Column('sky_background_b_mean', sa.REAL(), nullable=True, comment='the mean sky background level in b-arm averaged over the FoV/fibers (counts)'))
    op.add_column('sky', sa.Column('sky_background_b_median', sa.REAL(), nullable=True, comment='the median sky background level in b-arm averaged over the FoV/fibers (counts)'))
    op.add_column('sky', sa.Column('sky_background_b_sigma', sa.REAL(), nullable=True, comment='the sigma of the sky background level in b-arm (counts)'))
    op.add_column('sky', sa.Column('wavelength_ref_b', sa.REAL(), nullable=True, comment='the reference wavelength to measure the sky background level in b-arm (nm)'))
    op.add_column('sky', sa.Column('sky_background_n_mean', sa.REAL(), nullable=True, comment='the mean sky background level in n-arm averaged over the FoV/fibers (counts)'))
    op.add_column('sky', sa.Column('sky_background_n_median', sa.REAL(), nullable=True, comment='the median sky background level in n-arm averaged over the FoV/fibers (counts)'))
    op.add_column('sky', sa.Column('sky_background_n_sigma', sa.REAL(), nullable=True, comment='the sigma of the sky background level in n-arm (counts)'))
    op.add_column('sky', sa.Column('wavelength_ref_n', sa.REAL(), nullable=True, comment='the reference wavelength to measure the sky background level in n-arm (nm)'))
    op.add_column('sky', sa.Column('sky_background_m_mean', sa.REAL(), nullable=True, comment='the mean sky background level in m-arm averaged over the FoV/fibers (counts)'))
    op.add_column('sky', sa.Column('sky_background_m_median', sa.REAL(), nullable=True, comment='the median sky background level in m-arm averaged over the FoV/fibers (counts)'))
    op.add_column('sky', sa.Column('sky_background_m_sigma', sa.REAL(), nullable=True, comment='the sigma of the sky background level in m-arm (counts)'))
    op.add_column('sky', sa.Column('wavelength_ref_m', sa.REAL(), nullable=True, comment='the reference wavelength to measure the sky background level in m-arm (nm)'))

    op.alter_column('throughput', 'throughput_mean', new_column_name='throughput_r_mean', nullable=True, comment='the total throughput in r-arm (mean)')
    op.alter_column('throughput', 'throughput_median', new_column_name='throughput_r_median', nullable=True, comment='the total throughput in r-arm (median)')
    op.alter_column('throughput', 'throughput_sigma', new_column_name='throughput_r_sigma', nullable=True, comment='the total throughput in r-arm (sigma)')
    op.alter_column('throughput', 'wavelength_ref', new_column_name='wavelength_ref_r', nullable=True, comment='the reference wavelength to measure the total throughput (nm)')

    op.add_column('throughput', sa.Column('throughput_b_mean', sa.REAL(), nullable=True, comment='the total throughput in b-arm (mean)'))
    op.add_column('throughput', sa.Column('throughput_b_median', sa.REAL(), nullable=True, comment='the total throughput in b-arm (median)'))
    op.add_column('throughput', sa.Column('throughput_b_sigma', sa.REAL(), nullable=True, comment='the total throughput in b-arm (sigma)'))
    op.add_column('throughput', sa.Column('wavelength_ref_b', sa.REAL(), nullable=True, comment='the reference wavelength to measure the total throughput (nm)'))
    op.add_column('throughput', sa.Column('throughput_n_mean', sa.REAL(), nullable=True, comment='the total throughput in n-arm (mean)'))
    op.add_column('throughput', sa.Column('throughput_n_median', sa.REAL(), nullable=True, comment='the total throughput in n-arm (median)'))
    op.add_column('throughput', sa.Column('throughput_n_sigma', sa.REAL(), nullable=True, comment='the total throughput in n-arm (sigma)'))
    op.add_column('throughput', sa.Column('wavelength_ref_n', sa.REAL(), nullable=True, comment='the reference wavelength to measure the total throughput (nm)'))
    op.add_column('throughput', sa.Column('throughput_m_mean', sa.REAL(), nullable=True, comment='the total throughput in m-arm (mean)'))
    op.add_column('throughput', sa.Column('throughput_m_median', sa.REAL(), nullable=True, comment='the total throughput in m-arm (median)'))
    op.add_column('throughput', sa.Column('throughput_m_sigma', sa.REAL(), nullable=True, comment='the total throughput in m-arm (sigma)'))
    op.add_column('throughput', sa.Column('wavelength_ref_m', sa.REAL(), nullable=True, comment='the reference wavelength to measure the total throughput (nm)'))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('throughput', 'throughput_r_mean', new_column_name='throughput_mean', nullable=True, comment='the total throughput  (mean)')
    op.alter_column('throughput', 'throughput_r_median', new_column_name='throughput_median', nullable=True, comment='the total throughput (median)')
    op.alter_column('throughput', 'throughput_r_sigma', new_column_name='throughput_sigma', nullable=True, comment='the total throughput (sigma)')
    op.alter_column('throughput', 'wavelength_ref_r', new_column_name='wavelength_ref', nullable=True, comment='the reference wavelength to measure the total throughput (nm)')

    op.drop_column('throughput', 'wavelength_ref_m')
    op.drop_column('throughput', 'throughput_m_sigma')
    op.drop_column('throughput', 'throughput_m_median')
    op.drop_column('throughput', 'throughput_m_mean')
    op.drop_column('throughput', 'wavelength_ref_n')
    op.drop_column('throughput', 'throughput_n_sigma')
    op.drop_column('throughput', 'throughput_n_median')
    op.drop_column('throughput', 'throughput_n_mean')
    op.drop_column('throughput', 'wavelength_ref_b')
    op.drop_column('throughput', 'throughput_b_sigma')
    op.drop_column('throughput', 'throughput_b_median')
    op.drop_column('throughput', 'throughput_b_mean')
    
    op.alter_column('sky', 'sky_background_r_mean', new_column_name='sky_background_mean', nullable=True, comment='the mean sky background level averaged over the FoV/fibers (counts)')
    op.alter_column('sky', 'sky_background_r_median', new_column_name='sky_background_median', nullable=True, comment='the median sky background level averaged over the FoV/fibers (counts)')
    op.alter_column('sky', 'sky_background_r_sigma', new_column_name='sky_background_sigma', nullable=True, comment='the sigma of the sky background level (counts)')
    op.alter_column('sky', 'wavelength_ref_r', new_column_name='wavelength_ref', nullable=True, comment='the reference wavelength to measure the sky background level (nm)')

    op.drop_column('sky', 'wavelength_ref_m')
    op.drop_column('sky', 'sky_background_m_sigma')
    op.drop_column('sky', 'sky_background_m_median')
    op.drop_column('sky', 'sky_background_m_mean')
    op.drop_column('sky', 'wavelength_ref_n')
    op.drop_column('sky', 'sky_background_n_sigma')
    op.drop_column('sky', 'sky_background_n_median')
    op.drop_column('sky', 'sky_background_n_mean')
    op.drop_column('sky', 'wavelength_ref_b')
    op.drop_column('sky', 'sky_background_b_sigma')
    op.drop_column('sky', 'sky_background_b_median')
    op.drop_column('sky', 'sky_background_b_mean')

    op.alter_column('noise', 'noise_r_mean', new_column_name='noise_mean', nullable=True, comment='the background noise in electron/pix (mean)')
    op.alter_column('noise', 'noise_r_median', new_column_name='noise_median', nullable=True, comment='the background noise in electron/pix (median)')
    op.alter_column('noise', 'noise_r_sigma', new_column_name='noise_sigma', nullable=True, comment='the background noise in electron/pix? (sigma)')
    op.alter_column('noise', 'wavelength_ref_r', new_column_name='wavelength_ref', nullable=True, comment='the reference wavelength to measure the sky background noise (nm)')

    op.drop_column('noise', 'wavelength_ref_m')
    op.drop_column('noise', 'noise_m_sigma')
    op.drop_column('noise', 'noise_m_median')
    op.drop_column('noise', 'noise_m_mean')
    op.drop_column('noise', 'wavelength_ref_n')
    op.drop_column('noise', 'noise_n_sigma')
    op.drop_column('noise', 'noise_n_median')
    op.drop_column('noise', 'noise_n_mean')
    op.drop_column('noise', 'wavelength_ref_b')
    op.drop_column('noise', 'noise_b_sigma')
    op.drop_column('noise', 'noise_b_median')
    op.drop_column('noise', 'noise_b_mean')

    op.alter_column('exposure_time', 'effective_exposure_time_r', new_column_name='effective_exposure_time', nullable=True, comment='the effective exposure time inferred with the observed condition (sec.)')

    op.drop_column('exposure_time', 'effective_exposure_time_m')
    op.drop_column('exposure_time', 'effective_exposure_time_n')
    op.drop_column('exposure_time', 'effective_exposure_time_b')
    # ### end Alembic commands ###
